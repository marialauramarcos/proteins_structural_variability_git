{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Structural Divergence Analysis\"\noutput: html_document\n---\n# Introduction\nIn this report we compare structural divergence profiles in cartesian coordinates (SDi) with the Mean Square Fluctuation of the sites (MSFi) of p.ref.\n\n```{r setup, include = FALSE}\n# set chunk options\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)\n```\n\n```{r load-packages}\n# load packages\nlibrary(bio3d)\n\n# load functions\nsource(file.path(data.dir, \"my-functions.R\")) \n```\n\n```{r set-run-variables}\n# general parameters\ntolerance = 1e-10\n```\n\n```{r set-file-names}\n# set input filenames\n## reference\nreference.fname = file.path(data.dir, paste(family, \"_ref.txt\", sep = \"\"))\n\n## dri2\ndri2.exp.fname = file.path(data.dir, paste(family, \"_R0_\", R0, \"_beta_no.sel_K.analysis_Keff_out_m.exp.norm.dr.squarei.csv\", sep = \"\"))\ndri2.medium.fname = file.path(data.dir, paste(family, \"_R0_\", R0, \"_beta_medium.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv\", sep = \"\"))\ndri2.mut.fname = file.path(data.dir,paste(family, \"_R0_\", R0, \"_beta_no.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv\", sep = \"\"))\n```\n\n```{r set-reference-protein}\n# which is the reference protein?\nreference = as.character(read.table(reference.fname, header = F)[1, 1])\nif (reference != p.ref) {\n  print(\"Warning: different references\")\n}\n```\n\n```{r set-site-info}\n# read reference pdb and calculate resno, AA, and CN\nreference.pdb.fname = file.path(data.dir, paste(reference, \".pdb\", sep = \"\"))\nref.pdb = read.pdb(reference.pdb.fname)\ninds = atom.select(ref.pdb, elety = \"CA\")\nref.pdb.ca = ref.pdb$atom[inds$atom, ]\ncmap.ca = cmap(ref.pdb$xyz[inds$xyz], dcut = R0, scut = 0, mask.lower = F)\nr.p.ref = ref.pdb$xyz[inds$xyz]\nCN = rowSums(cmap.ca, na.rm = T) - 1 # diag(cmap.ca) returned by cmap is 1!\nn.sites = length(CN)\nAA = ref.pdb.ca$resid\nresno = ref.pdb.ca$resno\n\npdb.info = data.frame(resno, AA, CN)\nnames(pdb.info) = c(\"resno\", \"AA\", paste(\"CN\", as.character(R0), sep = \"\"))\n\n# make pdb.info site.info\nsite.info = cbind(pdb.info, site = seq(1:n.sites))\n```\n\n```{r read-site-data}\n# read dri2 data\ndri2.exp = read.csv(dri2.exp.fname, header = T)\ndri2.mut = read.csv(dri2.mut.fname, header = T)\ndri2.medium = read.csv(dri2.medium.fname, header = T)\n```\n\n```{r read-identity}\n# read identity\nm.identity = read.csv(file.path(data.dir, paste(family, \"_out_m.identity.csv\", sep = \"\")))$V1\nn.sites.mut.exp = (100 - (m.identity)) * n.sites / 100\n\nidentity = mean(m.identity)\nn.sites.mut.theo = as.integer((100 - (identity)) * n.sites / 100)\n```\n\n```{r calculate-MSF-p.ref}\n# calculate MSF (Mean Square Fluctuation) of p.ref\n## calculate ENM\nENMK.p.ref = CalculateENMKeff(matrix(r.p.ref, nrow = 3), \n                              seq(1:n.sites), \n                              c(), \n                              R0, \n                              tolerance, \n                              K.analysis)\n## get cov matrix\ncov.p.ref = ENMK.p.ref$cov\n\n## get the diagonal of the cov matrix\ndiag.p.ref = diag(cov.p.ref)\n\n## calculate the factor to split the diagonal\nfactor = sort(rep(seq(1:n.sites), 3))\n\n## split the diagonal\ns.diag.p.ref = split(diag.p.ref, factor)\n\n## create a matrix to save the data\nMSF.p.ref = matrix(nrow = 1, ncol = n.sites)\n\n## start a loop to calculate sums for each site\nfor (i in (1:n.sites)) {\n  MSF.p.ref[, i] = sum(unlist(s.diag.p.ref[i]), use.names = F)\n}\n \n## transform to a vector\nMSF.p.ref = as.vector(MSF.p.ref)\n```\n\n```{r prepare-site-data-dri2}\n# prepare the data\n## exp\ntdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))\ntdri2.exp = cbind(site.info, tdri2.exp)\nsiteComparison.exp = melt(tdri2.exp, id.vars = names(site.info), variable.name = \"protein\", value.name = \"dri2\")\n\n## mut\ntdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))\ntdri2.mut = cbind(site.info, tdri2.mut)\nsiteComparison.mut = melt(tdri2.mut, id.vars = names(site.info), variable.name = \"protein\", value.name = \"dri2\")\n\n## medium\ntdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))\ntdri2.medium = cbind(site.info, tdri2.medium)\nsiteComparison.medium = melt(tdri2.medium, id.vars = names(site.info), variable.name = \"protein\", value.name = \"dri2\")\n\n# bluild the data.frame\nsiteComparison.all.datasets.dri2 = rbind(data.frame(\"dataset\" = \"exp\", siteComparison.exp),\n                                         data.frame(\"dataset\" = \"mut\", siteComparison.mut),\n                                         data.frame(\"dataset\" = \"medium\", siteComparison.medium))\n\nsiteComparison.all.datasets.dri2 = ddply(siteComparison.all.datasets.dri2, c(\"dataset\", \"protein\"), mutate,\n                       \"SD\" = dri2,\n                     \"z.SD\" = vscale(dri2),\n                      \"RSD\" = sqrt(dri2),\n                    \"n.RSD\" = RSD,\n                    \"z.RSD\" = vscale(RSD))\n```\n\n```{r mean-profiles-comparisons}\n# prepare dat\ndat = siteComparison.all.datasets.dri2\ndat$dataset = revalue(dat$dataset, c(\"medium\" = \"selection\"))\ndat$dataset = revalue(dat$dataset, c(\"mut\" = \"no-selection\"))\n\n# dat with means and standard errors\nd = ddply(dat,c(\"dataset\", \"site\", \"AA\"), function(x) {\n                mean.z.RSD = mean(x$z.RSD, na.rm = T)\n                mean.n.RSD = mean(x$n.RSD, na.rm = T)\n                ndata = sum(!is.na(x$z.RSD))\n                se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)\n                se.n.RSD = sd(x$n.RSD, na.rm = T) / sqrt(ndata)\n                mean.z.SD = mean(x$z.SD, na.rm = T)\n                mean.SD = mean(x$SD, na.rm = T)\n                se.z.SD = sd(x$z.SD, na.rm = T) / sqrt(ndata)\n                se.SD = sd(x$SD, na.rm = T) / sqrt(ndata)\n                data.frame(mean.z.RSD, \n                           mean.n.RSD, \n                           ndata, \n                           se.z.RSD, \n                           se.n.RSD, \n                           mean.z.SD, \n                           mean.SD, \n                           se.z.SD, \n                           se.SD)\n})\n\n# extract means\nd.exp = subset(d, dataset == \"exp\")\nd.mut = subset(d, dataset == \"no-selection\")\nd.medium = subset(d, dataset == \"selection\")\n\n## correlations\nr.exp = cor(sqrt(d.exp$mean.SD), sqrt(MSF.p.ref))\nr.medium = cor(sqrt(d.medium$mean.SD), sqrt(MSF.p.ref))\nr.mut = cor(sqrt(d.mut$mean.SD), sqrt(MSF.p.ref))\n\n## plots\npar(pty = \"s\")\n\nlayout(matrix(1:3, 1, 3))\n\nplot(y = (sqrt(d.exp$mean.SD)), x = sqrt(MSF.p.ref), ylab = \"sqrt <SDi> experimental\", xlab = \"sqrt MSFi\")\nlm = lm((sqrt(d.exp$mean.SD)) ~ sqrt(MSF.p.ref))\nlegend(\"topleft\", paste (\"r = \", round(r.exp, digits = 2)), bty = \"n\")\n\nplot(y = (sqrt(d.mut$mean.SD)), x = sqrt(MSF.p.ref), ylab = \"sqrt <SDi> no-selection\", xlab = \"sqrt MSFi\")\nlm = lm((d.mut$mean.SD) ~ MSF.p.ref)\nlegend(\"topleft\", paste (\"r = \", round(r.mut, digits = 2)), bty = \"n\")\n\nplot(y = (sqrt(d.medium$mean.SD)), x = sqrt(MSF.p.ref), ylab = \"sqrt <SDi> selection\", xlab = \"sqrt MSFi\")\nlm = lm(d.medium$mean.SD ~ MSF.p.ref)\nlegend(\"topleft\", paste (\"r = \", round(r.medium, digits = 2)), bty = \"n\")\n```\n",
    "created" : 1511736388994.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "191274608",
    "id" : "6ED56396",
    "lastKnownWriteTime" : 1504824318,
    "last_content_update" : 1504824318,
    "path" : "C:/Users/Mar√≠a Laura/Desktop/Doctorado/VariabilidadEstructuralProteica/analysis-MSF-SD-RSD-n-no-sqrt.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}
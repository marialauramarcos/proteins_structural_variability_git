{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Comparisons LPD - SDi experimental \"\n---\n\n# Introduction\nIn this report we compare different LPD measures (their inverse, 1/CN and 1/WCN), with SDi experimental profiles. We do this because theoretical SDi is proportional to 1/CN or 1/WCN (depending on the ENM used to generate mutants). Then, using different R0 to calculate CN, we can get an idea of the results that will come from the simulations and choose some values of R0 to generate mutants. \nTheoretical SDi of ANM  is proportional to 1/CN with an r of aprox. 0.97, meanwhile theoretical SDi of pfANM  is proportional to 1/WCN with a lower value of r.\nTo calculate LPD measures, we used only CA of aa (\"CA\"), and both CA and CM (\"CM\"). \nWe compare the results obtained for different families. To do this, we use correlations calculated by the program \"analysis-structure-CN-WCN-exp.Rmd\".\nThe first 6 figures correspond to the mean correlation between 1/LPD (CN or WCN) and experimental SDi, where the mean is calculated over the families. The last 6 figures show in different colors the values obtanied for each family.\n\np = pearson correlation coef,\ns = spearman correlation coef.\n\n```{r setup, include = FALSE}\n# set chunk options\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)\n```\n\n```{r load-packages}\n# load packages\nlibrary(ggplot2)\n```\n\n```{r main, fig.width=14}\n### PROGRAM ###\n\n# read input\ninput.fname <- \"input_MainReport.csv\"\ninput <- read.csv(input.fname)\n\n# start matrices\nCA.cor.s = c()\nCM.cor.s = c()\n\nCA.cor.p = c()\nCM.cor.p = c()\n\nCA.cor.p.sqrt = c()\nCM.cor.p.sqrt = c()\n\nprint(\"families\")\n# satart a loop for each family\nfor (f in (1:nrow(input))) { \n  family <- as.character(input$family)[f]\n  print(family)\n  \n  # read the data frame\n  cc = read.csv(file = file.path(\"CORRELATIONS\", paste(family, \"_out_cc_R0s.csv\", sep = \"\")))\n  \n  # get CA and CM spearman cc for f\n  CA.cor.s = c(CA.cor.s, cc$CA.spearman)\n  CM.cor.s = c(CM.cor.s, cc$CM.spearman)\n  \n  # get CA and CM pearson cc for f\n  CA.cor.p = c(CA.cor.p, cc$CA.pearson)\n  CM.cor.p = c(CM.cor.p, cc$CM.pearson)\n  \n  # get CA and CM pearson sqrt cc for f\n  CA.cor.p.sqrt = c(CA.cor.p.sqrt, cc$CA.pearson.sqrt)\n  CM.cor.p.sqrt = c(CM.cor.p.sqrt, cc$CM.pearson.sqrt)\n}\n\n# modify dimensions\nCA.cor.s = matrix(CA.cor.s, nrow = nrow(cc))\nCM.cor.s = matrix(CM.cor.s, nrow = nrow(cc))\nCA.cor.p = matrix(CA.cor.p, nrow = nrow(cc))\nCM.cor.p = matrix(CM.cor.p, nrow = nrow(cc))\nCA.cor.p.sqrt = matrix(CA.cor.p.sqrt, nrow = nrow(cc))\nCM.cor.p.sqrt = matrix(CM.cor.p.sqrt, nrow = nrow(cc))\n\n# set colnames and rownames\ncolnames(CA.cor.s) = input$family\nrownames(CA.cor.s) = cc$X\ncolnames(CM.cor.s) = input$family\nrownames(CM.cor.s) = cc$X\ncolnames(CA.cor.p) = input$family\nrownames(CA.cor.p) = cc$X\ncolnames(CM.cor.p) = input$family\nrownames(CM.cor.p) = cc$X\ncolnames(CA.cor.p.sqrt) = input$family\nrownames(CA.cor.p.sqrt) = cc$X\ncolnames(CM.cor.p.sqrt) = input$family\nrownames(CM.cor.p.sqrt) = cc$X\n\n# calculate means\nmean.CA.cor.s = rowMeans(CA.cor.s, na.rm = T)\nmean.CM.cor.s = rowMeans(CM.cor.s, na.rm = T)\nmean.CA.cor.p = rowMeans(CA.cor.p, na.rm = T)\nmean.CM.cor.p = rowMeans(CM.cor.p, na.rm = T)\nmean.CA.cor.p.sqrt = rowMeans(CA.cor.p.sqrt, na.rm = T)\nmean.CM.cor.p.sqrt = rowMeans(CM.cor.p.sqrt, na.rm = T)\n\n# build a data frame\ndf.mean = data.frame(mean.CA.cor.s, mean.CM.cor.s, mean.CA.cor.p, mean.CM.cor.p, mean.CA.cor.p.sqrt, mean.CM.cor.p.sqrt, R0 = cc$X)\ndf.mean$order = c(1:length(df.mean$R0))\n\n# make plots\nlayout(matrix(1:4, 4, 1))\n\nggplot(df.mean, aes(y = mean.CA.cor.s, x = reorder(R0, order))) +\n  geom_point() +  \n  geom_text(aes(label = round(mean.CA.cor.s, digits = 3), vjust = -1)) +\n  coord_cartesian(ylim = c(0, 0.8)) +\n  labs(x = \"LPD\", y = \"<cc (1/LPD CA, SDi_exp) s>\")\n\nggplot(df.mean, aes(y = mean.CM.cor.s, x = reorder(R0, order))) +\n  geom_point() +  \n  geom_text(aes(label = round(mean.CM.cor.s, digits = 3), vjust = -1)) +\n  coord_cartesian(ylim = c(0, 0.8)) +\n  labs(x = \"LPD\", y = \"<cc (1/LPD CM, SDi_exp) s>\")\n\nggplot(df.mean, aes(y = mean.CA.cor.p, x = reorder(R0, order))) +\n  geom_point() +  \n  geom_text(aes(label = round(mean.CA.cor.p, digits = 3), vjust = -1)) +\n  coord_cartesian(ylim = c(0, 0.8)) +\n  labs(x = \"LPD\", y = \"<cc (1/LPD CA, SDi_exp) p>\")\n\nggplot(df.mean, aes(y = mean.CM.cor.p, x = reorder(R0, order))) +\n  geom_point() + \n  geom_text(aes(label = round(mean.CM.cor.p, digits = 3), vjust = -1)) +\n  coord_cartesian(ylim = c(0, 0.8)) +\n  labs(x = \"LPD\", y = \"<cc (1/LPD CM, SDi_exp) p>\")\n\nggplot(df.mean, aes(y = mean.CA.cor.p.sqrt, x = reorder(R0, order))) +\n  geom_point() +\n  geom_text(aes(label = round(mean.CA.cor.p.sqrt, digits = 3), vjust = -1)) +\n  coord_cartesian(ylim = c(0, 0.8)) +\n  labs(x = \"LPD\", y = \"<cc (1/LPD CA, SDi_exp) p sqrt>\")\n\nggplot(df.mean, aes(y = mean.CM.cor.p.sqrt, x = reorder(R0, order))) +\n  geom_point() +  \n  geom_text(aes(label = round(mean.CM.cor.p.sqrt, digits = 3), vjust = -1)) +\n  coord_cartesian(ylim = c(0, 0.8)) +\n  labs(x = \"LPD\", y = \"<cc (1/LPD CM, SDi_exp) p sqrt>\")\n\n# calculate data frames\ndf.CA.cor.s = data.frame(family = as.vector(matrix(rep(input$family, nrow(cc)), nrow = nrow(cc), byrow = T)),\n                         R0 = as.character(rep(cc$X, length(input$family))), \n                         cc = as.vector(CA.cor.s))\n\n# Add a column with order\ndf.CA.cor.s$order = c(1:length(df.CA.cor.s$R0))\n\n# use the added column to reorder() your data in ggplot\nggplot(df.CA.cor.s,  aes(x = reorder(R0, order), y = cc, col = family)) +\n  geom_point() +\n  coord_cartesian(ylim = c(0, 0.9)) +\n  labs(x = \"LPD\", y = \"cc (1/LPD CA, SDi_exp) s\")\n\n# calculate data frames\ndf.CM.cor.s = data.frame(family = as.vector(matrix(rep(input$family, nrow(cc)), nrow = nrow(cc), byrow = T)),\n                         R0 = as.character(rep(cc$X, length(input$family))), \n                         cc = as.vector(CM.cor.s))\n\n# Add a column with order\ndf.CM.cor.s$order = c(1:length(df.CM.cor.s$R0))\n\n# use the added column to reorder() your data in ggplot\nggplot(df.CM.cor.s,  aes(x = reorder(R0, order), y = cc, col = family)) +\n  geom_point() +\n  coord_cartesian(ylim = c(0, 0.9)) +\n  labs(x = \"LPD\", y = \"cc (1/LPD CM, SDi_exp) s\")\n\n# calculate data frames\ndf.CA.cor.p = data.frame(family = as.vector(matrix(rep(input$family, nrow(cc)), nrow = nrow(cc), byrow = T)),\n                         R0 = as.character(rep(cc$X, length(input$family))), \n                         cc = as.vector(CA.cor.p))\n\n# Add a column with order\ndf.CA.cor.p$order = c(1:length(df.CA.cor.p$R0))\n\n# use the added column to reorder() your data in ggplot\nggplot(df.CA.cor.p,  aes(x = reorder(R0, order), y = cc, col = family)) +\n  geom_point() +\n  coord_cartesian(ylim = c(0, 0.9)) +\n  labs(x = \"LPD\", y = \"cc (1/LPD CA, SDi_exp) p\")\n\n# calculate data frames\ndf.CM.cor.p = data.frame(family = as.vector(matrix(rep(input$family, nrow(cc)), nrow = nrow(cc), byrow = T)),\n                         R0 = as.character(rep(cc$X, length(input$family))), \n                         cc = as.vector(CM.cor.p))\n\n# Add a column with order\ndf.CM.cor.p$order = c(1:length(df.CM.cor.p$R0))\n\n# use the added column to reorder() your data in ggplot\nggplot(df.CM.cor.p,  aes(x = reorder(R0, order), y = cc, col = family)) +\n  geom_point() +\n  coord_cartesian(ylim = c(0, 0.9)) +\n  labs(x = \"LPD\", y = \"cc (1/LPD CM, SDi_exp) p\")\n\n# calculate data frames\ndf.CA.cor.p.sqrt = data.frame(family = as.vector(matrix(rep(input$family, nrow(cc)), nrow = nrow(cc), byrow = T)),\n                         R0 = as.character(rep(cc$X, length(input$family))), \n                         cc = as.vector(CA.cor.p.sqrt))\n\n# Add a column with order\ndf.CA.cor.p.sqrt$order = c(1:length(df.CA.cor.p.sqrt$R0))\n\n# use the added column to reorder() your data in ggplot\nggplot(df.CA.cor.p.sqrt,  aes(x = reorder(R0, order), y = cc, col = family)) +\n  geom_point() +\n  coord_cartesian(ylim = c(0, 0.9)) +\n  labs(x = \"LPD\", y = \"cc (1/LPD CA, SDi_exp) p sqrt \")\n\n# calculate data frames\ndf.CM.cor.p.sqrt = data.frame(family = as.vector(matrix(rep(input$family, nrow(cc)), nrow = nrow(cc), byrow = T)),\n                         R0 = as.character(rep(cc$X, length(input$family))), \n                         cc = as.vector(CM.cor.p.sqrt))\n\n# Add a column with order\ndf.CM.cor.p.sqrt$order = c(1:length(df.CM.cor.p.sqrt$R0))\n\n# use the added column to reorder() your data in ggplot\nggplot(df.CM.cor.p.sqrt,  aes(x = reorder(R0, order), y = cc, col = family)) +\n  geom_point() +\n  coord_cartesian(ylim = c(0, 0.9)) +\n  labs(x = \"LPD\", y = \"cc (1/LPD CM, SDi_exp) p sqrt\")\n```\n",
    "created" : 1511141803165.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2135805125",
    "id" : "AA3D284E",
    "lastKnownWriteTime" : 1511532601,
    "last_content_update" : 1511532601202,
    "path" : "C:/Users/Mar√≠a Laura/Desktop/proteins_structural_variability_git/comparison_families_LPD_vs_SDexp.Rmd",
    "project_path" : "comparison_families_LPD_vs_SDexp.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}
{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Structural Divergence - Cartesian coordinates\"\noutput: html_document\n---\n\n# Introduction\nWe study the evolutionary divergence of proteins using the LF-ENM and comparing simulated mutants with experimental data.\n\n```{r setup, include = FALSE}\n# set chunk options\nknitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, cache = FALSE)\n```\n\n```{r load-packages}\n# load packages\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(plyr)\nlibrary(bio3d)\n\n# load functions\nsource(file.path(data.dir, \"multiplot.R\"))\nsource(file.path(data.dir, \"my-functions.R\"))\nsource(\"FUNCTIONS/CalculateENMKeff.R\")\nsource(\"FUNCTIONS/CalculateENMK.R\")\nsource(\"FUNCTIONS/CalculateSideChainCM.R\")\nsource(\"FUNCTIONS/readCA.R\") \n```\n\n```{r set-my-colors}\n# set my colors\nmyColors = c(\"blue\", \"darkgreen\", \"darkgreen\", \"red\", \"red\") \nnames(myColors) <- c(\"exp\", \"mut\", \"no-selection\", \"medium\", \"selection\")\n```\n\n```{r set-run-variables}\n# set significance factors\nf95 = 1.96\nf99 = 2.6\nf999 = 3.3\ntolerance = 1e-10\n```\n\n```{r set-file-names}\n# set input filenames\n## data\nreference.fname = file.path(data.dir, paste(family, \"_ref.txt\", sep = \"\"))\nprotein_list.fname = file.path(data.dir, paste(family, \"_list.txt\", sep = \"\"))\nsite.info.fname = file.path(data.dir, paste(p.ref, \"_m.da.ca.csv\", sep = \"\"))\nfunctional.sites.fname = file.path(\"DATA\", paste(p.ref, \"_functionalSites.csv\", sep = \"\"))\nasa.fname = file.path(\"DATA\", paste(p.ref, \"_dssp.csv\", sep = \"\"))\nsurfase.area.fname = file.path(\"DATA\", \"surfase_area.csv\")\n\n## profiles to compare\ndri2.exp.fname = file.path(data.dir, paste(family, \"_R0_\", R0, \"_beta_no.sel_K.analysis_Keff_out_m.exp.norm.dr.squarei.csv\", sep = \"\"))\ndri2.medium.fname = file.path(data.dir, paste(family, \"_R0_\", R0, \"_beta_medium.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv\", sep = \"\"))\ndri2.mut.fname = file.path(data.dir,paste(family, \"_R0_\", R0, \"_beta_no.sel_K.analysis_Keff_out_m.theo.norm.dr.squarei.csv\", sep = \"\"))\n\n## score\nscore.fname = file.path(data.dir, paste(p.ref, \"_consurf.csv\", sep = \"\"))\nsim.data.mut.fname = file.path(data.dir, paste(family, \"_R0_\", R0, \"_beta_no.sel_out_df.data.csv\", sep = \"\"))\nsim.data.medium.sel.fname = file.path(data.dir, paste(family, \"_R0_\", R0, \"_beta_medium.sel_out_df.data.csv\", sep = \"\"))\n```\n\n```{r set-reference-protein}\n# which is the reference protein?\nreference = as.character(read.table(reference.fname, header = F)[1, 1])\nif (reference != p.ref) {\n  print(\"Warning: different references\")\n}\n```\n\n```{r read-functional-sites}\n# which are the functional sites?\nfunctional.sites = read.csv(functional.sites.fname, sep = \";\")\nactive.site.index = functional.sites$index\ndescription = functional.sites$description\nfunction.info = data.frame(active.site.index, description)\n```\n\n```{r read-asa-calculate-rsa}\n# read files\n## asa or acc of p.ref\nasa = read.csv(asa.fname, sep = \";\")\nACC = asa$ACC\nAA = asa$AA\n\n## surfase area of AA\nsurfase.area = read.csv(surfase.area.fname, sep = \";\")\nAA.CODE = surfase.area$X1.LETTER.AA.CODE\nSURFASE.AREA = surfase.area$SURFASE.AREA\n\n# calculate RSA\nRSA = c()\nfor (i in (1:length(AA))) {\n  RSA[i] = ACC[i]/SURFASE.AREA[which(AA.CODE == as.character(AA[i]))]\n}\n```\n\nIn this case we studied the `r family` family. \nWe used the ENM `r enm` with R0 = `r R0` to generate mutants.\nWe used as reference for the ENM the protein with pdb code `r reference`. \nThe active/functional sites of the reference are:\n\n```{r print-info}\nprint(function.info)\n```\n\nWe simulated `r n.mut.p` mutants of this reference for each protein of the family.\nThe `r family` family is of the type `r type` and consists of the following proteins:\n\n```{r set-experimental-protein-names}\n# experimental protein names\nprotein.exp = read.table(protein_list.fname, header = F, stringsAsFactors = F)[, 1]\nprotein.exp = protein.exp[protein.exp != reference]\nprint(protein.exp)\n```\n\n```{r set-site-info}\n# read site information of the reference protein\nsite.info = read.csv(site.info.fname, header = T, sep = \",\")\n\n# add info to site.info\nd = ddply(site.info, \"site\", .fun = function(x) data.frame(\"da\" = min(x[, c(-1, -2)])))\n\n# define shells of active.sites site neighborhood\nd$shell = cut(d$da, breaks = c(-.1, 2.5, 7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5, 52.5, max(d$da)))\nlevels(d$shell) = seq(length(levels(d$shell))) - 1 # rename shell levels\nsite.info = merge(site.info, d, by = \"site\")\n\n# read reference pdb and calculate resno, AA, and CN\nreference.pdb.fname = file.path(data.dir,paste(reference, \".pdb\", sep = \"\"))\nref.pdb = read.pdb(reference.pdb.fname)\ninds = atom.select(ref.pdb, elety = \"CA\")\nref.pdb.ca = ref.pdb$atom[inds$atom,]\nr.p.ref = ref.pdb$xyz[inds$xyz]\ncmap.ca = cmap(ref.pdb$xyz[inds$xyz], dcut = R0, scut = 0, mask.lower = F)\nCN = rowSums(cmap.ca, na.rm = T) - 1 # diag(cmap.ca) returned by cmap is 1\nn.sites = length(CN)\nAA = ref.pdb.ca$resid\nresno = ref.pdb.ca$resno\n\n# calculate WCN\nr.p.ref = matrix(ref.pdb$xyz[inds$xyz], nrow = 3)\ndist.r.p.ref = dist.xyz(t(r.p.ref))\nWCN = c()\nfor (i in (1:ncol(r.p.ref))) {\n  WCN[i] = sum(1/dist.r.p.ref[i, -i]^2)\n}\n\n# correct active site index\nactive.site.index.n = c()\nfor (i in (1:length(active.site.index))) {active.site.index.n = c(active.site.index.n, which(resno == active.site.index[i]))}\nactive.sites = active.site.index.n\n\n# find the active site contacts\ncontacts.active.sites = d$site[d$shell == 1]\n\n# read CM data \nif ((data.dir == \"OUT/out_subset_CM_ANM\") | (data.dir == \"OUT/out_subset_CM_pfANM\")){ \n\n  # Read PDB of p.ref\n  pdb.ca = ReadCA(reference.pdb.fname, chain.p.ref)\n  r.ca.p.ref = pdb.ca$xyz.calpha\n  n.aa = pdb.ca$n.sites\n  \n  r.CM.p.ref = CalculateSideChainCM(reference.pdb.fname, chain.p.ref)\n  n.CM = ncol(r.CM.p.ref)\n  r.p.ref = c(r.ca.p.ref, as.vector(r.CM.p.ref)) \n\n  cmap.CM = cmap(r.p.ref, dcut = R0, scut = 0, mask.lower = F)[1:n.aa, ]\n  CN = rowSums(cmap.CM, na.rm = T) - 2\n  \n  WCN = c()\n  r.p.ref = matrix(r.p.ref, nrow = 3)\n  dist.r.p.ref = dist.xyz(t(r.p.ref))\n  for (i in (1:ncol(r.CM.p.ref))) {\n    WCN[i] = sum(1/dist.r.p.ref[i, -c(i, (i + ncol(r.CM.p.ref)))] ^ 2)\n  }\n}\n\n# build pdb.info\npdb.info = data.frame(resno, AA, CN)\nnames(pdb.info) = c(\"resno\", \"AA\", paste(\"CN\", as.character(R0), sep = \"\"))\nb.factor = as.numeric(ref.pdb$atom[inds$atom, c(\"b\")])    \n\n# add pdb.info to site.info\nsite.info = cbind(site.info, pdb.info)\n```\n\n```{r calculate-MSF-p.ref}\n# source kij\nif (enm == \"ANM\") {source(\"FUNCTIONS/CalculateKij.R\")}\nif (enm == \"pfANM\") {source(\"FUNCTIONS/CalculateKijPFANM.R\")}\n\n# calculate MSF (Mean Square Fluctuation) of p.ref\nif ((data.dir == \"OUT/out_subset_CA_ANM\") | (data.dir == \"OUT/out_subset_CA_pfANM\")) {\n  ## calculate ENM CA\n  ENMK.p.ref = CalculateENMKeff(matrix(r.p.ref, nrow = 3), \n                              seq(1:n.sites), \n                              c(), \n                              R0, \n                              tolerance, \n                              K.analysis)\n}\nif((data.dir == \"OUT/out_subset_CM_ANM\") | (data.dir == \"OUT/out_subset_CM_pfANM\")) {\n  ## calculate ENM CM\n  ENMK.p.ref = CalculateENMKeff(matrix(r.p.ref, nrow = 3), \n                                seq(1:n.sites), \n                                seq((n.sites + 1),ncol(matrix(r.p.ref, nrow = 3))), \n                                R0, \n                                tolerance, \n                                K.analysis)\n} \n\n## get cov matrix\ncov.p.ref = ENMK.p.ref$cov\n\n## get the diagonal of the cov matrix\ndiag.p.ref = diag(cov.p.ref)\n\n## calculate the factor to split the diagonal\nfactor = sort(rep(seq(1:n.sites), 3))\n\n## split the diagonal\ns.diag.p.ref = split(diag.p.ref, factor)\n\n## create a matrix to save the data\nMSF.p.ref = matrix(nrow = 1, ncol = n.sites)\n\n## start a loop to calculate sums for each site\nfor (i in (1:n.sites)) {\n  MSF.p.ref[, i] = sum(unlist(s.diag.p.ref[i]), use.names = F)\n}\n \n## transform to a vector\nMSF.p.ref = as.vector(MSF.p.ref)\n```\n\n```{r read-data}\n# read data\n## exp\ndri2.exp = read.csv(dri2.exp.fname, header = T)\nsite = site.info$site\ndri2.exp = dri2.exp[1:length(protein.exp), site]\nrownames(dri2.exp) = protein.exp\n\n## mut\ndri2.mut = read.csv(dri2.mut.fname, header = T)\nrownames(dri2.mut) = paste(\"mut\", rownames(dri2.mut), sep = \"\")\n\n## medium\ndri2.medium = read.csv(dri2.medium.fname, header = T)\nrownames(dri2.medium) = paste(\"medium\", rownames(dri2.medium), sep = \"\")\n```\n\n```{r read-identity}\n# read identity\nm.identity = read.csv(file.path(data.dir, paste(family, \"_out_m.identity.csv\", sep = \"\")))$V1\nn.sites.mut.exp = n.sites - (m.identity * n.sites / 100)\n\nidentity = mean(m.identity)\nn.sites.mut.theo = as.integer((100 - (identity)) * n.sites / 100)\n```\n\n# Structural divergence along sites\n\nHere we study how structural divergence varies from site to site. We compare simulated data with empirical data. \n\n```{r prepare-site-data}\n# prepare the data\n## exp\ntdri2.exp = as.data.frame(t(as.matrix(dri2.exp)))\ntdri2.exp = cbind(site.info, tdri2.exp)\nsiteComparison.exp = melt(tdri2.exp, id.vars = names(site.info), variable.name = \"protein\", value.name = \"dri2\")\n\n## mut\ntdri2.mut = as.data.frame(t(as.matrix(dri2.mut)))\ntdri2.mut = cbind(site.info, tdri2.mut)\nsiteComparison.mut = melt(tdri2.mut, id.vars = names(site.info), variable.name = \"protein\", value.name = \"dri2\")\n\n## medium\ntdri2.medium = as.data.frame(t(as.matrix(dri2.medium)))\ntdri2.medium = cbind(site.info, tdri2.medium)\nsiteComparison.medium = melt(tdri2.medium, id.vars = names(site.info), variable.name = \"protein\", value.name = \"dri2\")\n\n# bluild the data.frame\nsiteComparison.all.datasets = rbind(data.frame(\"dataset\" = \"exp\", siteComparison.exp),\n                                    data.frame(\"dataset\" = \"mut\", siteComparison.mut),\n                                    data.frame(\"dataset\" = \"medium\", siteComparison.medium))\n\nsiteComparison.all.datasets = ddply(siteComparison.all.datasets, c(\"dataset\", \"protein\"), mutate,\n                       \"SD\" = dri2,\n                     \"z.SD\" = vscale(dri2),\n                      \"RSD\" = sqrt(dri2),\n                    \"z.RSD\" = vscale(RSD))\n```\n\n### SDi vs site\n\nTo measure structural divergence we use SDi profiles. The following plot compares the mean SDi profiles, including standard errors (with .999 confidence level for the mean).\n\n```{r-mean-se-RSD/SD-vs-site, fig.cap = \"Black lines are the active sites and grey lines are their contacts\"}\n# comparison of SD profiles with functional sites\n## prepare dat\ndat = siteComparison.all.datasets\ndat$dataset = revalue(dat$dataset, c(\"medium\" = \"selection\"))\ndat$dataset = revalue(dat$dataset, c(\"mut\" = \"no-selection\"))\n\n## dat with means and standard errors\nd = ddply(dat,c(\"dataset\", \"site\"), function(x) {\n                mean.z.RSD = mean(x$z.RSD, na.rm = T)\n                mean.RSD = mean(x$RSD, na.rm = T)\n                ndata = sum(!is.na(x$z.RSD))\n                se.z.RSD = sd(x$z.RSD, na.rm = T) / sqrt(ndata)\n                se.RSD = sd(x$RSD, na.rm = T) / sqrt(ndata)\n                mean.z.SD = mean(x$z.SD, na.rm = T)\n                mean.SD = mean(x$SD, na.rm = T)\n                se.z.SD = sd(x$z.SD, na.rm = T) / sqrt(ndata)\n                se.SD = sd(x$SD, na.rm = T) / sqrt(ndata)\n                data.frame(mean.z.RSD, \n                           mean.RSD, \n                           ndata, \n                           se.z.RSD, \n                           se.RSD, \n                           mean.z.SD, \n                           mean.SD, \n                           se.z.SD, \n                           se.SD)\n})\n\n# save d\nwrite.csv(d, file = file.path(data.dir, paste(family, \"_\", p.ref, \"_R0_\", R0, \"d.SD.csv\", sep = \"\")))\n\n## prepare plots with mean profiles and deviations SD\np = ggplot(d, aes(x = site, y = mean.SD, col = dataset, fill = dataset)) +\n    geom_line() +\n    geom_ribbon(aes(ymin = mean.SD - f95 * se.SD, ymax = mean.SD + se.SD), alpha = .4, show.legend = F) +\n    geom_vline(xintercept = c(active.sites), show.legend = F) +\n    geom_vline(xintercept = contacts.active.sites, col = \"grey\", show.legend = F) +\n    labs(x = \"site\", y = \"<SDi>\") +\n    scale_colour_manual(name = NULL, values = myColors) + \n    scale_fill_manual(name = NULL, values = myColors)\n\n## plot separate and comparative plots\np.facet = p + facet_grid(dataset~., switch = \"y\") + theme(legend.position = \"bottom\")\np.facet\n\n## plot superimposed plots\np + theme(legend.position = \"bottom\")\n```\n\n### Correlation between SDi profiles\n\n```{r comparisons-between-profiles}\n\n# comparison of SDi profiles\n\n## get subsets\nd.exp = subset(d, dataset == \"exp\")\nd.mut = subset(d, dataset == \"no-selection\")\nd.medium = subset(d, dataset == \"selection\")\n\n## calculate Pearson correlation\nr.exp.mut = cor(d.exp$mean.SD, d.mut$mean.SD)\nr.exp.medium = cor(d.exp$mean.SD, d.medium$mean.SD)\nr.mut.medium = cor(d.mut$mean.SD, d.medium$mean.SD)\n\ncor.df = data.frame(\"comparison\" = c(\"exp vs no-selection\", \"exp vs selection\", \"no-selection vs selection\"),\n                    \"R\" = c(r.exp.mut, r.exp.medium, r.mut.medium))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson correlation between <SDi> profiles\")\n\n## calculate Spearman correlation\nr.exp.mut = cor(d.exp$mean.SD, d.mut$mean.SD, method = \"spearman\")\nr.exp.medium = cor(d.exp$mean.SD, d.medium$mean.SD, method = \"spearman\")\nr.mut.medium = cor(d.mut$mean.SD, d.medium$mean.SD, method = \"spearman\")\n\ncor.df = data.frame(\"comparison\" = c(\"exp vs no-selection\", \"exp vs selection\", \"no-selection vs selection\"),\n                    \"R\" = c(r.exp.mut, r.exp.medium, r.mut.medium))\n\nknitr::kable(cor.df, digits = 2, caption = \"Spearman correlation between <SDi> profiles\")\n\n## plot exp vs simulated SDi profiles\npar(pty = \"s\")\n\nplot(x = d.exp$mean.SD, \n     y = d.mut$mean.SD, \n     xlab = \"<SDi> experimental\", \n     ylab = \"<SDi> no-selection\", \n     xlim = c(min(c(d.exp$mean.SD, d.mut$mean.SD)), max(c(d.exp$mean.SD, d.mut$mean.SD))),\n     ylim = c(min(c(d.exp$mean.SD, d.mut$mean.SD)), max(c(d.exp$mean.SD, d.mut$mean.SD))))\npoints(x = as.numeric(d.exp$mean.SD)[active.sites], y = as.numeric(d.mut$mean.SD)[active.sites], col = \"yellow\")\npoints(x = as.numeric(d.exp$mean.SD)[contacts.active.sites], y = as.numeric(d.mut$mean.SD)[contacts.active.sites], col = \"green\")\n\nplot(x = d.exp$mean.SD, \n     y = d.medium$mean.SD, \n     xlab = \"<SDi> experimental\", \n     ylab = \"<SDi> selection\", \n     xlim = c(min(c(d.exp$mean.SD, d.medium$mean.SD)), max(c(d.exp$mean.SD, d.medium$mean.SD))),\n     ylim = c(min(c(d.exp$mean.SD, d.medium$mean.SD)), max(c(d.exp$mean.SD, d.medium$mean.SD))))\npoints(x = as.numeric(d.exp$mean.SD)[contacts.active.sites], y = as.numeric(d.medium$mean.SD)[contacts.active.sites], col = \"green\")\npoints(x = as.numeric(d.exp$mean.SD)[active.sites], y = as.numeric(d.medium$mean.SD)[active.sites], col = \"yellow\")\n\nplot(x = d.mut$mean.SD, \n     y = d.medium$mean.SD, \n     xlab = \"<SDi> no-selection\", \n     ylab = \"<SDi> selection\", \n     xlim = c(min(c(d.mut$mean.SD, d.medium$mean.SD)), max(c(d.mut$mean.SD, d.medium$mean.SD))),\n     ylim = c(min(c(d.mut$mean.SD, d.medium$mean.SD)), max(c(d.mut$mean.SD, d.medium$mean.SD))))\npoints(x = as.numeric(d.mut$mean.SD)[contacts.active.sites], y = as.numeric(d.medium$mean.SD)[contacts.active.sites], col = \"green\")\npoints(x = as.numeric(d.mut$mean.SD)[active.sites], y = as.numeric(d.medium$mean.SD)[active.sites], col = \"yellow\")\n```\n\n### Comparison between sqrt SDi profiles\n\n```{r comparisons-between-sqrt-profiles, fig.height=3}\n# comparison of sqrt SD profiles\n\n# get subsets\nd.exp = subset(d, dataset == \"exp\")\nd.mut = subset(d, dataset == \"no-selection\")\nd.medium = subset(d, dataset == \"selection\")\n\n# calculate Pearson correlation\nr.exp.mut = cor(sqrt(d.exp$mean.SD), sqrt(d.mut$mean.SD))\nr.exp.medium = cor(sqrt(d.exp$mean.SD), sqrt(d.medium$mean.SD))\nr.mut.medium = cor(sqrt(d.mut$mean.SD), sqrt(d.medium$mean.SD))\n\ncor.df = data.frame(\"comparison\" = c(\"exp vs no-selection\", \"exp vs selection\", \"no-selection vs selection\"),\n                    \"R\" = c(r.exp.mut, r.exp.medium, r.mut.medium))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson correlation between sqrt <SDi> profiles\")\n\n## plot exp vs simulated sqrt SDi profiles\npar(pty = \"s\")\n\nlayout(matrix(1:3, 1, 3))\n\nplot(x = scale(sqrt(d.mut$mean.SD)), \n     y = scale(sqrt(d.exp$mean.SD)), \n     xlab = \"sqrt <SDi> no-selection\", \n     ylab = \"sqrt <SDi> experimental\") \nlm = lm(sqrt(d.exp$mean.SD) ~ sqrt(d.mut$mean.SD))\nabline(lm)\nlegend(\"topleft\", paste (\"r = \", round(r.exp.mut, digits = 2)), bty = \"n\")\n\nplot(x = scale(sqrt(d.medium$mean.SD)), \n     y = scale(sqrt(d.exp$mean.SD)), \n     xlab = \"sqrt <SDi> selection\", \n     ylab = \"sqrt <SDi> experimental\") \nlm = lm(sqrt(d.exp$mean.SD) ~ sqrt(d.medium$mean.SD))\nabline(lm)\nlegend(\"topleft\", paste (\"r = \", round(r.exp.medium, digits = 2)), bty = \"n\")\n\nplot(x = scale(sqrt(d.mut$mean.SD)), \n     y = scale(sqrt(d.medium$mean.SD)), \n     xlab = \"sqrt <SDi> no-selection\", \n     ylab = \"sqrt <SDi> selection\")\nlm = lm(sqrt(d.medium$mean.SD) ~ sqrt(d.mut$mean.SD))\nabline(lm)\nlegend(\"topleft\", paste (\"r = \", round(r.mut.medium, digits = 2)), bty = \"n\")\n```\n\n```{r write-pdbs} \n# write pdb files with mean.SDi as b-factor for building images\n\n## read pdb CAs\npdb.xyz.ca = ReadCA(reference.pdb.fname, chain.p.ref)$xyz\n\n## experimental\nexp.mean.SD.vec <- vec2resno(as.vector(scale(sqrt(d.exp$mean.SD))), 1:ncol(pdb.xyz.ca))\nwrite.pdb(xyz = c(pdb.xyz.ca), b = exp.mean.SD.vec, file =  file.path(data.dir, paste(p.ref, \"_exp.pdb\", sep = \"\")))\n\n## mut\nmut.mean.SD.vec <- vec2resno(as.vector(scale(sqrt(d.mut$mean.SD))), 1:ncol(pdb.xyz.ca))\nwrite.pdb(xyz = c(pdb.xyz.ca), b = mut.mean.SD.vec, file = file.path(data.dir, paste(p.ref, \"_mut.pdb\", sep = \"\")))\n\n## mut + sel / medium\nmedium.mean.SD.vec <- vec2resno(as.vector(scale(sqrt(d.medium$mean.SD))), 1:ncol(pdb.xyz.ca))\nwrite.pdb(xyz = c(pdb.xyz.ca), b = medium.mean.SD.vec, file = file.path(data.dir, paste(p.ref, \"_medium.pdb\", sep = \"\")))\n```\n\n### Sequence (LPD (CN for ANM and WCN for pfANM)) - structure (SDi) comparison\nIn this section we compare theoretical and experimental structural divergence profiles with LPD.  \n```{r structure-CN-comparison}\n# choose LPD\nif (enm == \"ANM\"){\n  LPD = CN\n  # save CN\n  write.csv(CN, file = file.path(data.dir, paste(family, \"_\", p.ref, \"_R0_\", R0, \"CN.csv\", sep = \"\")))\n}else{\n  LPD = WCN\n  # save WCN\n  write.csv(WCN, file = file.path(data.dir, paste(family, \"_\", p.ref, \"_R0_\", R0, \"WCN.csv\", sep = \"\")))\n}\n\n# compare profiles\n## plot\npar(pty = \"s\")\n\nplot(x = d.exp$mean.SD, y = (1/LPD), xlab = \"<SDi> experimental\")\nplot(x = d.mut$mean.SD, y = (1/LPD), xlab = \"<SDi> no-selection\")\nplot(x = d.medium$mean.SD, y = (1/LPD), xlab = \"<SDi> selection\")\n\n## calculate Person correlations\nr.exp.mean.SD.LPD = cor(d.exp$mean.SD, (1/LPD))\nr.mut.mean.SD.LPD = cor(d.mut$mean.SD, (1/LPD))\nr.medium.mean.SD.LPD = cor(d.medium$mean.SD, (1/LPD))\n\ncor.df = data.frame(\"comparison\" = c(\"SDi experimental vs 1/LPD\", \"SDi no-selection vs 1/LPD\", \"SDi selection vs 1/LPD\"),\n                    \"R\" = c(r.exp.mean.SD.LPD , r.mut.mean.SD.LPD, r.medium.mean.SD.LPD))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson Correlation structure (SDi) - sequence (1/LPD)\")\n\n## calculate Spearman correlations\nr.exp.mean.SD.LPD = cor(d.exp$mean.SD, (1/LPD), method = \"spearman\")\nr.mut.mean.SD.LPD = cor(d.mut$mean.SD, (1/LPD), method = \"spearman\")\nr.medium.mean.SD.LPD = cor(d.medium$mean.SD, (1/LPD), method = \"spearman\")\n\ncor.df = data.frame(\"comparison\" = c(\"SDi experimental vs 1/LPD\", \"SDi no-selection vs 1/LPD\", \"SDi selection vs 1/LPD\"),\n                    \"R\" = c(r.exp.mean.SD.LPD , r.mut.mean.SD.LPD, r.medium.mean.SD.LPD))\n\nknitr::kable(cor.df, digits = 2, caption = \"Spearman Correlation structure (SDi) - sequence (1/LPD)\")\n```\n\n### Sequence RSA - structure (SDi) comparison\nIn this section we compare theoretical and experimental structural divergence profiles with RSA calculated with DSSP.  \n\n```{r structure-RSA-comparison}\n# save RSA\nwrite.csv(RSA, file = file.path(data.dir, paste(family, \"_\", p.ref, \"_R0_\", R0, \"RSA.csv\", sep = \"\")))\n\n# compare profiles\n## plot\npar(pty = \"s\")\n\nplot(x = d.exp$mean.SD, y = RSA, xlab = \"<SDi> experimental\")\nplot(x = d.mut$mean.SD, y = RSA, xlab = \"<SDi> no-selection\")\nplot(x = d.medium$mean.SD, y = RSA, xlab = \"<SDi> selection\")\n\n## calculate Person correlations\nr.exp.mean.SD.RSA = cor(d.exp$mean.SD, RSA)\nr.mut.mean.SD.RSA = cor(d.mut$mean.SD, RSA)\nr.medium.mean.SD.RSA = cor(d.medium$mean.SD, RSA)\n\ncor.df = data.frame(\"comparison\" = c(\"SDi experimental vs RSA\", \"SDi no-selection vs RSA\", \"SDi selection vs RSA\"),\n                    \"R\" = c(r.exp.mean.SD.RSA , r.mut.mean.SD.RSA, r.medium.mean.SD.RSA))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson Correlation structure (SDi) - sequence RSA\")\n\n## calculate Spearman correlations\nr.exp.mean.SD.RSA = cor(d.exp$mean.SD, RSA, method = \"spearman\")\nr.mut.mean.SD.RSA = cor(d.mut$mean.SD, RSA, method = \"spearman\")\nr.medium.mean.SD.RSA = cor(d.medium$mean.SD, RSA, method = \"spearman\")\n\ncor.df = data.frame(\"comparison\" = c(\"SDi experimental vs RSA\", \"SDi no-selection vs RSA\", \"SDi selection vs RSA\"),\n                    \"R\" = c(r.exp.mean.SD.RSA , r.mut.mean.SD.RSA, r.medium.mean.SD.RSA))\n\nknitr::kable(cor.df, digits = 2, caption = \"Spearman Correlation structure (SDi) - sequence RSA\")\n```\n\n### Sequence MSF - structure (SDi) comparison\nIn this section we compare theoretical and experimental structural divergence profiles with MSF calculated with the ANM.  \n\n```{r structure-MSF-comparison}\n# save MSF\nwrite.csv(MSF.p.ref, file = file.path(data.dir, paste(family, \"_\", p.ref, \"_R0_\", R0, \"MSF.csv\", sep = \"\")))\n\n# compare profiles\n## plot\npar(pty = \"s\")\n\nplot(x = d.exp$mean.SD, y = MSF.p.ref, xlab = \"<SDi> experimental\")\nplot(x = d.mut$mean.SD, y = MSF.p.ref, xlab = \"<SDi> no-selection\")\nplot(x = d.medium$mean.SD, y = MSF.p.ref, xlab = \"<SDi> selection\")\n\n## calculate Person correlations\nr.exp.mean.SD.MSF = cor(d.exp$mean.SD, MSF.p.ref)\nr.mut.mean.SD.MSF = cor(d.mut$mean.SD, MSF.p.ref)\nr.medium.mean.SD.MSF = cor(d.medium$mean.SD, MSF.p.ref)\n\ncor.df = data.frame(\"comparison\" = c(\"SDi experimental vs MSF.p.ref\", \"SDi no-selection vs MSF.p.ref\", \"SDi selection vs MSF.p.ref\"),\n                    \"R\" = c(r.exp.mean.SD.MSF , r.mut.mean.SD.MSF, r.medium.mean.SD.MSF))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson Correlation structure (SDi) - sequence MSF.p.ref\")\n\n## calculate Spearman correlations\nr.exp.mean.SD.MSF = cor(d.exp$mean.SD, MSF.p.ref, method = \"spearman\")\nr.mut.mean.SD.MSF = cor(d.mut$mean.SD, MSF.p.ref, method = \"spearman\")\nr.medium.mean.SD.MSF = cor(d.medium$mean.SD, MSF.p.ref, method = \"spearman\")\n\ncor.df = data.frame(\"comparison\" = c(\"SDi experimental vs MSF.p.ref\", \"SDi no-selection vs MSF.p.ref\", \"SDi selection vs MSF.p.ref\"),\n                    \"R\" = c(r.exp.mean.SD.MSF , r.mut.mean.SD.MSF, r.medium.mean.SD.MSF))\n\nknitr::kable(cor.df, digits = 2, caption = \"Spearman Correlation structure (SDi) - sequence MSF.p.ref\")\n```\n\n```{r sqrt-structure-MSF-comparison, fig.height=3}\n# extract means\nd.exp = subset(d, dataset == \"exp\")\nd.mut = subset(d, dataset == \"no-selection\")\nd.medium = subset(d, dataset == \"selection\")\n\n## correlations\nr.exp = cor(sqrt(d.exp$mean.SD), sqrt(MSF.p.ref))\nr.medium = cor(sqrt(d.medium$mean.SD), sqrt(MSF.p.ref))\nr.mut = cor(sqrt(d.mut$mean.SD), sqrt(MSF.p.ref))\n\n## plots\npar(pty = \"s\")\n\nlayout(matrix(1:3, 1, 3))\n\nplot(y = (sqrt(d.exp$mean.SD)), x = sqrt(MSF.p.ref), ylab = \"sqrt <SDi> experimental\", xlab = \"sqrt MSFi\")\nlm = lm((sqrt(d.exp$mean.SD)) ~ sqrt(MSF.p.ref))\nlegend(\"topleft\", paste (\"r = \", round(r.exp, digits = 2)), bty = \"n\")\n\nplot(y = (sqrt(d.mut$mean.SD)), x = sqrt(MSF.p.ref), ylab = \"sqrt <SDi> no-selection\", xlab = \"sqrt MSFi\")\nlm = lm((d.mut$mean.SD) ~ MSF.p.ref)\nlegend(\"topleft\", paste (\"r = \", round(r.mut, digits = 2)), bty = \"n\")\n\nplot(y = (sqrt(d.medium$mean.SD)), x = sqrt(MSF.p.ref), ylab = \"sqrt <SDi> selection\", xlab = \"sqrt MSFi\")\nlm = lm(d.medium$mean.SD ~ MSF.p.ref)\nlegend(\"topleft\", paste (\"r = \", round(r.medium, digits = 2)), bty = \"n\")\n```\n\n### Sequence b-factor - structure (SDi) comparison\nIn this section we compare theoretical and experimental structural divergence profiles with b-factor obtained from the pdb.\n\n\n```{r structure-b.factor-comparison}\n\n# compare profiles\n## plot\npar(pty = \"s\")\n\nplot(x = d.exp$mean.SD, y = b.factor, xlab = \"<SDi> experimental\")\nplot(x = d.mut$mean.SD, y = b.factor, xlab = \"<SDi> no-selection\")\nplot(x = d.medium$mean.SD, y = b.factor, xlab = \"<SDi> selection\")\n\n## calculate Person correlations\nr.exp.mean.SD.B = cor(d.exp$mean.SD, b.factor)\nr.mut.mean.SD.B = cor(d.mut$mean.SD, b.factor)\nr.medium.mean.SD.B = cor(d.medium$mean.SD, b.factor)\n\ncor.df = data.frame(\"comparison\" = c(\"SD experimental vs b.factor\", \"SD no-selection vs b.factor\", \"SD selection vs b.factor\"),\n                    \"R\" = c(r.exp.mean.SD.B , r.mut.mean.SD.B, r.medium.mean.SD.B))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson Correlation structure (SD) - sequence b.factor\")\n\n## calculate Spearman correlations\nr.exp.mean.SD.B = cor(d.exp$mean.SD, b.factor, method = \"spearman\")\nr.mut.mean.SD.B = cor(d.mut$mean.SD, b.factor, method = \"spearman\")\nr.medium.mean.SD.B = cor(d.medium$mean.SD, b.factor, method = \"spearman\")\n\ncor.df = data.frame(\"comparison\" = c(\"SD experimental vs b.factor\", \"SD no-selection vs b.factor\", \"SD selection vs b.factor\"),\n                    \"R\" = c(r.exp.mean.SD.B , r.mut.mean.SD.B, r.medium.mean.SD.B))\n\nknitr::kable(cor.df, digits = 2, caption = \"Spearman Correlation structure (SD) - sequence b.factor\")\n```\n\n### Sequence b-factor - sequence MSF comparison\nIn this section we compare theoretical and experimental b-factors\n\n```{r MSF-b.factor-comparison}\n\n# compare profiles\n## plot\npar(pty = \"s\")\n\nplot(x = MSF.p.ref, y = b.factor)\n\n## calculate Person correlations\nr.MSF.p.ref.b = cor(MSF.p.ref, b.factor)\n\ncor.df = data.frame(\"comparison\" = \"MSF vs b.factor\",\n                             \"R\" = r.MSF.p.ref.b)\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson Correlation sequence MSF - sequence b.factor\")\n\n## calculate Spearman correlations\nr.MSF.p.ref.b = cor(MSF.p.ref, b.factor, method = \"spearman\")\n\ncor.df = data.frame(\"comparison\" = \"MSF vs b.factor\",\n                             \"R\" = r.MSF.p.ref.b)\n\nknitr::kable(cor.df, digits = 2, caption = \"Spearman Correlation sequence MSF - sequence b.factor\")\n```\n\n### Sequence comparison\n\nIn this section we compare theoretical sequence divergence profiles with sequence scores obtained from ConsurfDB. To obtain theoretical profiles, for each selection regimen, we calculated the number of times we had mutated each site and divided this number by the number of times we had tried a mutation at the site. \n\n```{r sequence-profiles-comparison}\n# read experimental data obtained from ConsurfDB\nconsurf = read.csv(score.fname, sep = \";\")\nscore = consurf$SCORE\n\n# read simulated data\n## no sel\nsim.data.mut = read.csv(sim.data.mut.fname)\nmut.site.mut = sim.data.mut$site\naccept.mut = sim.data.mut$accept\n\n## medium sel\nsim.data.medium.sel = read.csv(sim.data.medium.sel.fname)\nmut.site.medium.sel = sim.data.medium.sel$site\naccept.medium.sel = sim.data.medium.sel$accept\n\n# calculate p.accept of simulated data\np.accept.mut = c()\np.accept.medium.sel = c()\n\n# correct indexes\nif ((data.dir == \"OUT/out_subset_CM_ANM\") | (data.dir == \"OUT/out_subset_CM_pfANM\")) {\n  mut.site.mut = mut.site.mut - n.sites\n  mut.site.medium.sel = mut.site.medium.sel - n.sites\n  CN.CM = sim.data.mut$CN\n  CN = c()\n\n  for (i in (1:n.sites)) {\n    CN[i] = CN.CM[which(mut.site.mut == i)][1]\n  }\n}\n  \nfor (i in (1:n.sites)) {\n  accept.mut.i = accept.mut[which(mut.site.mut == i)]\n  p.accept.mut.i = mean(accept.mut.i)\n  p.accept.mut[i] = p.accept.mut.i\n  \n  accept.medium.sel.i = accept.medium.sel[which(mut.site.medium.sel == i)]\n  p.accept.medium.sel.i = mean(accept.medium.sel.i)\n  p.accept.medium.sel[i] = p.accept.medium.sel.i\n}\n\n# select LPD\nif (enm == \"ANM\"){\n  LPD = CN\n}else{\n  LPD == WCN\n}\n\n# compare exp vs no sel profiles\n## plot\npar(pty = \"s\")\n\nplot(x = p.accept.mut, y = log(LPD))\nplot(x = p.accept.mut, y = score)\nplot(x = score, y = log(LPD)) \n\n## calculate corelations\nr.p.accept.mut.LPD = cor(p.accept.mut, log(LPD))\nr.p.accept.mut.score = cor(p.accept.mut, score)\nr.score.LPD = cor(score, log(LPD))\n\ncor.df = data.frame(\"comparison\" = c(\"paccept no-selection vs log(LPD)\", \"paccept no-selection vs score\", \"score vs log(LPD)\"),\n                    \"R\" = c(r.p.accept.mut.LPD , r.p.accept.mut.score, r.score.LPD))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson correlation between sequence profiles\")\n\nprint(\"<paccept no-selection>\")\nprint(mean(p.accept.mut))\n\n# compare exp vs medium sel profiles\n## plot\npar(pty = \"s\")\n\nplot(x = p.accept.medium.sel, y = log(LPD))\nplot(x = p.accept.medium.sel, y = score)\nplot(x = score, y = log(LPD))\n\n## calculate corelations\nr.p.accept.medium.sel.LPD = cor(p.accept.medium.sel, log(LPD))\nr.p.accept.medium.sel.score = cor(p.accept.medium.sel, score)\nr.score.LPD = cor(score, log(LPD))\n\ncor.df = data.frame(\"comparison\" = c(\"paccept selection vs log(LPD)\", \"paccept selection vs score\", \"score vs log(LPD)\"),\n                    \"R\" = c(r.p.accept.medium.sel.LPD , r.p.accept.medium.sel.score, r.score.LPD))\n\nknitr::kable(cor.df, digits = 2, caption = \"Pearson correlation between sequence profiles\")\n\nprint(\"<paccept selection (medium selection)>\")\nprint(mean(p.accept.medium.sel))\n```",
    "created" : 1511732963669.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1066833327",
    "id" : "C4124C55",
    "lastKnownWriteTime" : 1512401869,
    "last_content_update" : 1512401869112,
    "path" : "C:/Users/María Laura/Desktop/proteins_structural_variability_git/analysis-structure.Rmd",
    "project_path" : "analysis-structure.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}
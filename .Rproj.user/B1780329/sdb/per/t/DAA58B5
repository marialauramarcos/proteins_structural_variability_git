{
    "contents" : "# This is the main program of the project. The program simulates mutants of a given protein, analyzes the multiple\n# alignment of the family to which the protein belongs, calculates measures of variabilty of theoretical and \n# experimental data, compares them, and generates a report.\n# To run the program it is necessary to fill the input file (\"input_MainProgram.csv\") with the following information:\n#\n#    - family: the family of the protein to mutate. It can be \"globins\", \"serinProteases\", \"plastocyanins\", \n#    \"snakesToxin\", \"sh3\", \"lipocalin\", \"fabp\", \"kinase\", \"rrm\", \"phoslip\", \"gluts\" and \"ldh\".\n#    - p.ref: the pdb code (pdbid) of the protein to mutate (example: \"1a6m\"). The protein must be a member of\n#    the selected family. This pdbid must not be included in the dataset (\"DATA/family_dataset.csv\").\n#    - exp.chain.p.ref: the chain of p.ref in the pdb file obtained from Homstrad.\n#    - mut.model: mutational model. It can be \"LFENM\" (\"Linearly Forced - Elastic Network Model\") or \"MND\" \n#    (\"Multivariate Normal Distribution\").\n#    - n.mut.p: the number of mutants to generate for each member of the family. For example, if the family has 20 \n#    members, the program generates n.mut.p x 20 mutants.\n#    - fmax: argument for \"LFENM\". It is the maximun value for the forces that model the mutations. \n#    - R0: the cut-off for the ANM (\"Anisotropic Network Model\") that represents the proteins.\n#    - rotate: it can be \"TRUE\" or \"FALSE\". If it is \"TRUE\", r.p.2 is rotated in order to minimize RMSD with r.p.ref.\n#    - core: it can be \"TRUE\" or \"FALSE\". If it is \"TRUE\", the program only considers the conserved core of \n#    the alignment. If it is \"FALSE\", the program analyzes the whole alignment.\n#    - heme: argument for \"globins\". It can be \"TRUE\" or \"FALSE\". If it is \"TRUE\", the program considers the heme group.\n#    - analyze.family: It can be \"TRUE\" or \"FALSE\". If it is \"TRUE\" the program analyzes the family.\n#    - generate.mutants: It can be \"TRUE\" or \"FALSE\". If it is \"TRUE\" the program generates new mutants.\n#    - natural.selection: It can be \"TRUE\" or \"FALSE\". If it is \"TRUE\", the mutants are calculated considering natural \n#    selection. If it is \"FALSE\", the mutants are calculated in a random manner.\n#    - K.analysis: It can be \"K\" or \"Keff\". For \"K\" or \"Keff\", the analysis is based on normal modes of \"K\" or \"Keff\"\n#    respectibly.\n\n# Remove objects.\nrm(list = ls())\n\n# Load packages.\nlibrary(bio3d) \nlibrary(flux)\nlibrary(knitr)\nlibrary(markdown)\nlibrary(MASS)\nlibrary(rmarkdown)\nlibrary(seqinr) \n\n# Data dir.\ndata.dir <- \"DATA\"\n\n# Output dir.\nout.dir <- \"OUT\"\n\n# General parameters.\nTOLERANCE = 1e-10\n\n# Functions filenames.\nAnalyzeExperimentalTheoretical.fname <- \"FUNCTIONS/AnalyzeExperimentalTheoretical.R\"\nAnalyzeFamily.fname <- \"FUNCTIONS/AnalyzeFamily.R\"\nAnalyzeAlignment.fname <- \"FUNCTIONS/AnalyzeAlignment.R\"\nGenerateMutants.fname <- \"FUNCTIONS/GenerateMutants.R\"\nReadFasta.fname <- \"FUNCTIONS/ReadFasta.R\"\nReadCA.fname <- \"FUNCTIONS/ReadCA.R\"\nReadHeme.fname <- \"FUNCTIONS/ReadHeme.R\"\nCalculateENMKeff.fname <- \"FUNCTIONS/CalculateENMKeff.R\"\nCalculateENMK.fname <- \"FUNCTIONS/CalculateENMK.R\"\nCalculateKij.fname <- \"FUNCTIONS/CalculateKij.R\"\nCalculateForce.fname <- \"FUNCTIONS/CalculateForce.R\"\nCalculateVariability.fname <- \"FUNCTIONS/CalculateVariability.R\"\n\n# Source functions.\nsource(AnalyzeExperimentalTheoretical.fname)\nsource(AnalyzeFamily.fname)\nsource(AnalyzeAlignment.fname)\nsource(GenerateMutants.fname)\nsource(ReadFasta.fname) \nsource(ReadCA.fname) \nsource(ReadHeme.fname)\nsource(CalculateENMKeff.fname)\nsource(CalculateENMK.fname)\nsource(CalculateKij.fname)\nsource(CalculateForce.fname)\nsource(CalculateVariability.fname)\n\n# Read input.\ninput.fname <- file.path(\"input_MainProgram.csv\")\ninput <- read.csv(input.fname)\n\nfor (a in (1:nrow(input))) { \n  family <- as.character(input$family)[a]\n  print(family)\n  p.ref <- as.character(input$p.ref)[a]\n  exp.chain.p.ref <- as.character(input$exp.chain.p.ref)[a]\n  mut.model = input$mut.model[a]\n  n.mut.p = input$n.mut.p[a]\n  fmax = input$fmax[a] \n  R0 = input$R0[a]\n  core <- input$core[a]\n  rotate <- input$rotate[a]\n  heme <- input$heme[a]\n  analyze.family <- input$analyze.familiy[a]\n  generate.mutants <- input$generate.mutants[a]\n  analyze.experimental.theoretical <- input$analyze.experimental.theoretical[a]\n  natural.selection <- input$natural.selection[a]\n  K.analysis <- input$K.analysis[a]\n  \n  # Generate ids for output filenames.\n  mut.fname.id <- paste(family, \"_mut.model_\", mut.model, \"_naturalSelection_\", natural.selection, \"_R0_\", R0, sep = \"\")\n  analysis.fname.id <- paste(mut.fname.id, \"_core_\", core, \"_K.analysis_\", K.analysis, sep = \"\")\n  \n  # Analyze the alignment of the family.\n  if (analyze.family == \"TRUE\") {\n    AnalyzeFamily(family,\n                  p.ref, \n                  data.dir,\n                  out.dir)\n  }\n\n  # Generate mutants.\n  if (generate.mutants == \"TRUE\") {\n    GenerateMutants(family,\n                    exp.chain.p.ref, \n                    mut.model,\n                    n.mut.p,\n                    fmax, \n                    R0,\n                    heme, \n                    natural.selection,\n                    data.dir,\n                    out.dir,\n                    mut.fname.id,\n                    TOLERANCE)\n  }\n  \n  # Analyze measures of variability of experimental proteins and simulated mutants.\n  if (analyze.experimental.theoretical == \"TRUE\") {\n    AnalyzeExperimentalTheoretical(family,\n                                   exp.chain.p.ref,\n                                   n.mut.p,\n                                   R0, \n                                   core,\n                                   rotate,\n                                   heme,\n                                   natural.selection,\n                                   K.analysis,\n                                   data.dir,\n                                   out.dir,\n                                   mut.fname.id, \n                                   analysis.fname.id,\n                                   TOLERANCE)\n  }\n}\n\n#  Generate a report.\n#  rmarkdown::render('Report.Rmd', \n#                    output_file = paste(\"report_\", analysis.fname.id, \".html\", sep = ''))\n#}\n\n\n  \n",
    "created" : 1458844451150.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3592094099",
    "id" : "DAA58B5",
    "lastKnownWriteTime" : 1458996497,
    "path" : "C:/Users/Laurita/Desktop/Doctorado/VariabilidadEstructuralProteica/MainProgram.R",
    "project_path" : "MainProgram.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}